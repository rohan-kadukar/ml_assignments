1.import pandas as pd
import matplotlib.pyplot as plt
iris=pd.read_csv("Iris1.csv")
iris.head()
iris.plot(kind="scatter",x="SepalLengthCm",y="SepalWidthCm")

2.import pandas as pd
df=pd.read_csv('DataMLcategorical2.csv')
from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
label=le.fit_transform(df['Country'])
label
df.drop("Country",axis=1,inplace=True)
df["Country"]=label
df

3.import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
datas=pd.read_csv("Position_SalariesPolynomialRegression.csv")
x=datas.iloc[:,1:-1].values
y=datas.iloc[:,-1].values
from sklearn.linear_model import LinearRegression
lin_reg=LinearRegression()
lin_reg.fit(x,y)
from sklearn.preprocessing import PolynomialFeatures
poly_reg=PolynomialFeatures(degree=4)
X_poly=poly_reg.fit_transform(x)
lin_reg_2=LinearRegression()
lin_reg_2.fit(X_poly,y)
plt.scatter(x,y,color='red')
plt.plot(x,lin_reg_2.predict(poly_reg.fit_transform(x)),color='blue')
plt.title("Truth of Bluff Polynomial Regression")
plt.xlabel("position ")
plt.ylabel("salary")
plt.show()

4.import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
datas=pd.read_csv("Salary_DataSimpleLinearRegression.csv")
x=datas.iloc[:,:-1].values
y=datas.iloc[:,-1].values
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=1/3,random_state=0)
from sklearn.linear_model import LinearRegression
regressor=LinearRegression()
regressor.fit(x_train,y_train)
y_pred=regressor.predict(x_test)
plt.scatter(x_train,y_train,color='red')
plt.plot(x_train,regressor.predict(x_train),color='blue')

5.from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score
iris=load_iris()
x=iris.data
y=iris.target
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.4,random_state=1)
gnb=GaussianNB()
gnb.fit(x_train,y_train)
y_pred=gnb.predict(x_test)
accuracy=accuracy_score(y_test,y_pred)
print("Accuracy:",accuracy)